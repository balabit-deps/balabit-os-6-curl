Backport of:

From 945f60e8a7f08aedb0eede5e3574f1972fc86ec8 Mon Sep 17 00:00:00 2001
From: Patrick Monnerat <patrick@monnerat.net>
Date: Thu, 24 Nov 2016 14:28:39 +0100
Subject: [PATCH] Limit ASN.1 structure sizes to 256K. Prevent some allocation
 size overflows. See CRL-01-006.

---
 lib/vauth/cleartext.c | 24 +++++++++++++++++-------
 lib/vtls/cyassl.c     |  3 ++-
 lib/vtls/gskit.c      |  3 +--
 lib/x509asn1.c        | 33 +++++++++++++++++++++------------
 lib/x509asn1.h        |  9 ++++++---
 5 files changed, 47 insertions(+), 25 deletions(-)

Index: curl-7.47.0/lib/curl_sasl.c
===================================================================
--- curl-7.47.0.orig/lib/curl_sasl.c	2018-10-24 08:35:40.400118461 -0400
+++ curl-7.47.0/lib/curl_sasl.c	2018-10-24 08:35:40.396118463 -0400
@@ -307,16 +307,27 @@ static CURLcode sasl_create_plain_messag
   char *plainauth;
   size_t ulen;
   size_t plen;
+  size_t plainlen;
 
+  *outlen = 0;
+  *outptr = NULL;
   ulen = strlen(userp);
   plen = strlen(passwdp);
 
-  plainauth = malloc(2 * ulen + plen + 2);
-  if(!plainauth) {
-    *outlen = 0;
-    *outptr = NULL;
+  /* Compute binary message length, checking for overflows. */
+  plainlen = 2 * ulen;
+  if(plainlen < ulen)
+    return CURLE_OUT_OF_MEMORY;
+  plainlen += plen;
+  if(plainlen < plen)
+    return CURLE_OUT_OF_MEMORY;
+  plainlen += 2;
+  if(plainlen < 2)
+    return CURLE_OUT_OF_MEMORY;
+
+  plainauth = malloc(plainlen);
+  if(!plainauth)
     return CURLE_OUT_OF_MEMORY;
-  }
 
   /* Calculate the reply */
   memcpy(plainauth, userp, ulen);
@@ -326,8 +337,7 @@ static CURLcode sasl_create_plain_messag
   memcpy(plainauth + 2 * ulen + 2, passwdp, plen);
 
   /* Base64 encode the reply */
-  result = Curl_base64_encode(data, plainauth, 2 * ulen + plen + 2, outptr,
-                              outlen);
+  result = Curl_base64_encode(data, plainauth, plainlen, outptr, outlen);
   free(plainauth);
   return result;
 }
